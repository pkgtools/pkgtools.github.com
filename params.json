{"name":"Pkgtools","body":"PKGTOOLS\r\n========\r\n\r\nInstallation.\r\n-------------\r\n\r\nYou need to install the following ports to use these pkgtools:\r\n\r\n * `lang/ruby18` -- Ruby 1.8 interpreter, or\r\n * `lang/ruby19` -- Ruby 1.9 interpreter.\r\n\r\nIf you want to be able to run tests, you will also need to install\r\ndevel/ruby-testunit.\r\n\r\nTools included.\r\n---------------\r\n\r\n### portupgrade\r\n\r\nPortupgrade is a tool to upgrade installed packages via ports or\r\npackages.  It allows you to upgrade installed packages without having\r\nto reinstall dependent/required packages by directly adjusting the\r\npackage database located under /var/db/pkg, while it can also upgrade\r\npackages recursively.\r\n\r\nExample: `portupgrade gtk`.\r\n\r\n### portinstall\r\n\r\nPortinstall is equivalent to `portupgrade -N', which means it tries to\r\ninstall the latest version when a specified package is not installed.\r\nPrior to the installation of a new package, all the required packages\r\nare upgraded.\r\n\r\nExample: `portinstall shells/zsh`.\r\n\r\n### portversion\r\n\r\nPortversion is a tool to compare the versions of install packages with\r\nthose in the ports tree.  It is a replacement for pkg\\_version(1)\r\ncooperative with portupgrade, that is, the command output is optimized\r\nfor portupgrade.  Besides, it runs much faster than pkg\\_version(1)\r\nbecause it utilizes the prebuilt ports database. (See portsdb)\r\n\r\nExample: `portversion`.\r\n\r\n### portsdb\r\n\r\nPortsdb generates the ports database named INDEX.db from the ports\r\nINDEX file.  It is commonly used among the tool suite and\r\nautomatically updated on demand when it gets older than the ports\r\nINDEX file.\r\n\r\nExample: `portsdb -Uu`.\r\n\r\n### ports\\_glob\r\n\r\nPorts\\_glob expands ports globs.  It understands wildcards and is\r\ncapable of listing the required, dependent or master ports of a given\r\nport.  It would be handy to use from within a shell script.\r\n\r\nExample: `ports_glob '*/*firefox*'`.\r\n\r\n### pkg\\_fetch\r\n\r\nPkg_fetch is a tool to download binary packages from remote sites.  It\r\ncan optionally download packages recursively through dependencies.\r\n\r\nExample: `pkg_fetch -r sawfish`.\r\n\r\n### pkg\\_glob\r\n\r\nPkg\\_glob expands package globs.  It understands wildcards and is\r\ncapable of listing the required or dependent packages of a package.\r\nIt would be handy to use from within a shell script.\r\n\r\nExample: `pkg_glob -R gnome`.\r\n\r\n### pkg\\_deinstall\r\n\r\nPkg\\_deinstall is a wrapper/replacement of pkg\\_delete(1), which\r\nunderstands wildcards and is capable of recursing through\r\ndependencies.  It has an option to preserve shared libraries.\r\n\r\nExample: `pkg_deinstall -r xmms`.\r\n\r\n### pkgdb\r\n\r\nPkgdb creates and updates the packages database which is commonly used\r\namong the tool suite.  It keeps a hash that maps an installed file to\r\na package name, a hash that maps a package to an origin, and a list of\r\ninstalled packages.  The database file is automatically updated on\r\ndemand when any package is installed or deinstalled after the database\r\nwas last updated.\r\n\r\nExample: `pkgdb -u`.\r\n\r\nPkgdb also works as an interactive tool for fixing the package\r\nregistry database when -F is specified.  It helps you resolve stale\r\ndependencies, unlink cyclic dependencies, complete stale or missing\r\norigins, and remove duplicates.  You have to run this periodically so\r\nthat portupgrade and other tools can work effectively and unfailingly.\r\n\r\nExample: `pkgdb -Fv`.\r\n\r\n### pkg\\_which\r\n\r\nPkg\\_which inquires of the packages database which package each given\r\nfile came from.  If you do not have permission to update the database\r\nalthough it is outdated, it delegates tasks to pkg\\_info(1).\r\n\r\nExample: `pkg_which patgen`.\r\n\r\n### portsclean\r\n\r\nPortsclean is a tool to clean ports working directories, no longer\r\nreferenced distfiles, outdated package files, and/or obsolete and\r\norphan shared libraries.\r\n\r\nExample: `portsclean -Di`.\r\n\r\n### portcvsweb\r\n\r\nPortcvsweb is a tool to instantly browse a history of a given file via\r\nCVSweb.  It may be more useful than you expect.  Try it with src, www,\r\ndoc, NetBSD pkgsrc, and OpenBSD ports files. :)\r\n\r\nExample: `portcvsweb sysutils/portupgrade`.\r\n","tagline":"FreeBSD ports and packages management app","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}